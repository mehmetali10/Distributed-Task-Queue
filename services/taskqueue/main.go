package main

import (
	c "mid/core/var/common"
	"mid/core/var/env"
	_ "mid/services/taskqueue/docs" // docs is generated by Swag CLI, you have to import it.
	"mid/services/taskqueue/server"
	"net/http"
	"os"

	"github.com/go-kit/log"
	"github.com/go-kit/log/level"
)

// @title           TaskQueue API
// @version         1.0
// @description     This is a microservice server called TaskQueue, which provides various endpoints for managing tasks in a queue. It allows you to enqueue SMS messages, trigger workers for processing tasks, and retrieve SMS queue entries.
// @host            localhost:8080
// @BasePath        /v1

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description   Please include a valid bearer token in the 'Authorization' header for authentication.

// @externalDocs.description  OpenAPI
// @externalDocs.url          https://swagger.io/resources/open-api/
func main() {

	httpAddr := env.PortTaskQueueService

	logger := log.NewLogfmtLogger(os.Stdout)
	logger = level.NewFilter(logger, level.AllowInfo())
	logger = log.With(logger, c.LabelTimeStamp, log.DefaultTimestampUTC)

	router := server.CreateRouter(logger)

	level.Info(logger).Log(c.LabelMsg, c.ServerStartingMsg, c.LabelAddress, httpAddr)
	err := http.ListenAndServe(httpAddr, router)
	if err != nil {
		level.Error(logger).Log(c.LabelMsg, c.ServerFailedMsg, c.LabelError, err)
	}
}
